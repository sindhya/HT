#include "main.h"
int parseInputDescription(char *inputFileName,char **vertices,struct vertexHashTable *vertexHash,struct edgeHashTable *edgeHash)
{
	
	char *buffer=(char*)malloc(50);
	char vertex1[30],vertex2[30],temp[30],ch;
	int weight,vertexId1,vertexId2,length;

	struct edge *edgeData=(struct edge*)malloc(sizeof(struct edge));
	struct vertex *vertexData=(struct vertex*)malloc(sizeof(struct vertex));

	FILE *fp=fopen(inputFileName,"r");
	if(fscanf(fp,"%s %c %d",buffer,&ch,&numVertices)==EOF )
	{
		printf("\nEmpty File");
		exit(0);
	}
	if(toupper(buffer[0])!='N')
	{
		printf("\nNumber of vertices line not specified");
		exit(0);
	}
	if(numVertices==0)
	{
		printf("\nNumber missing in num vertices field:");
		exit(0);
	}
	while(!feof(fp))
	{
		fscanf(fp,"%s",temp);
		//if(strcmp(temp,"typeB")==0)
		if(temp[0]!='(')
			break;
		strcpy(vertex1,temp+1);
		length=strlen(temp);
		vertex1[length]='\0';
		fscanf(fp,"%s %d",temp,&weight);
		length=strlen(temp);
		strncpy(vertex2,temp,length-1);
		vertex2[length-1]='\0';
		strcpy(vertexData->vertexName,vertex1);
		if(vertexHashInsert(vertexHash,vertexData)==-1)
		{
			printf("\nError in Insertion!");
			return -1;
		}
		strcpy(vertexData->vertexName,vertex2);
		if(vertexHashInsert(vertexHash,vertexData)==-1)
		{
			printf("\nError in Insertion!");
			return -1;
		}
		vertexId1=getVertexId(vertexHash,vertex1);
		vertexId2=getVertexId(vertexHash,vertex2);
	
		edgeData->vertexId1=vertexId1;
		edgeData->vertexId2=vertexId2;
		edgeData->weight=weight;

		if(edgeHashInsert(edgeHash,edgeData)==-1)
		{
			printf("\nError in Edge-Insertion");
			return -1;
		}
	}
	if(numEdges==0)
	{
		printf("\nNo Type A edges!!");
		exit(0);
	}
	if(fscanf(fp,"%s %d",temp,&typeBWeight)==EOF)
	{
		printf("\nTypeB weight missing!");
		exit(0);
	}
	if(typeBWeight==0)
	{
		printf("\nWeight missing in typeB field!");
		exit(0);
	}
	fclose(fp);
	return 0;
}

